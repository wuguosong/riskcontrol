<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yk.message.dao.IMessageMapper">
    <!-- 字段与属性映射 -->
    <resultMap id="messageMap" type="com.yk.message.entity.Message">
        <id column="message_id" property="messageId" javaType="java.lang.Long"/>
        <result column="message_type" property="messageType" javaType="java.lang.String"/>
        <result column="proc_inst_id" property="procInstId" javaType="java.lang.String"/>
        <result column="parent_id" property="parentId" javaType="java.lang.Long"/>
        <result column="original_id" property="originalId" javaType="java.lang.Long"/>
        <result column="created_by" property="createdBy" javaType="java.lang.String"/>
        <result column="created_name" property="createdName" javaType="java.lang.String"/>
        <result column="created_dept" property="createdDept" javaType="java.lang.String"/>
        <result column="created_position" property="createdPosition" javaType="java.lang.String"/>
        <result column="replied_by" property="repliedBy" javaType="java.lang.String"/>
        <result column="replied_name" property="repliedName" javaType="java.lang.String"/>
        <result column="replied_dept" property="repliedDept" javaType="java.lang.String"/>
        <result column="replied_position" property="repliedPosition" javaType="java.lang.String"/>
        <result column="message_title" property="messageTitle" javaType="java.lang.String"/>
        <result column="message_content" property="messageContent" javaType="java.lang.String"/>
        <result column="message_date" property="messageDate" javaType="java.sql.Timestamp"/>
        <result column="push_flag" property="pushFlag" javaType="java.lang.String"/>
        <result column="read_flag" property="readFlag" javaType="java.lang.String"/>
        <result column="bs_uni_related" property="bsUniRelated" javaType="java.lang.String"/>
        <result column="via_users" property="viaUsers" javaType="java.lang.String"/>
        <result column="message_priority" property="messagePriority" javaType="java.lang.Long"/>
        <result column="message_file" property="messageFile" javaType="java.lang.String"/>
        <result column="message_file_type" property="messageFileType" javaType="java.lang.String"/>
        <result column="message_screen_type" property="messageScreenType" javaType="java.lang.String"/>
        <result column="attri_text01" property="attriText01" javaType="java.lang.String"/>
        <result column="attri_text02" property="attriText02" javaType="java.lang.String"/>
        <result column="attri_text03" property="attriText03" javaType="java.lang.String"/>
        <result column="attri_text04" property="attriText04" javaType="java.lang.String"/>
    </resultMap>
    <!-- 基本数据列 -->
    <sql id="baseColumn">
	   message_id,
       message_type,
       proc_inst_id,
       parent_id,
       original_id,
       created_by,
       created_name,
       created_dept,
       created_position,
       replied_by,
       replied_name,
       replied_dept,
       replied_position,
       message_title,
       message_content,
       message_date,
       push_flag,
       read_flag,
       bs_uni_related,
       via_users,
       message_priority,
       message_file,
       message_file_type,
       message_screen_type,
       attri_text01,
       attri_text02,
       attri_text03,
       attri_text04
	</sql>
    <!-- 查询某个根下的子节点 -->
    <select id="selectMessageList" resultMap="messageMap" parameterType="map">
        select
        <include refid="baseColumn"/>
        from sys_message
        where 1 = 1
        <if test="procInstId != null">
            and proc_inst_id = #{procInstId}
        </if>
        <if test="parentId != null">
            and parent_id = #{parentId}
        </if>
        <if test="messageScreenType != null">
            and message_screen_type = #{messageScreenType}
        </if>
        order by message_priority desc,message_date asc
    </select>
    <!-- 查询一个留言下的所有叶子留言 -->
    <select id="selectMessageChildren" resultMap="messageMap" parameterType="long">
        select
        <include refid="baseColumn"/>
        from sys_message
        where 1 = 1
        and parent_id = #{parentId}
        or original_id = #{parentId}
        order by message_date asc
    </select>
    <!--通过id获取-->
    <select id="selectMessageById" resultMap="messageMap" parameterType="long">
        select m.* from sys_message m
        where m.message_id = #{messageId}
    </select>
    <!--保存-->
    <insert id="insertMessage" parameterType="com.yk.message.entity.Message">
        <selectKey order="BEFORE" resultType="java.lang.Long"
                   keyProperty="messageId">
            select sys_message_seq.nextval from dual
        </selectKey>
        insert into sys_message
        values(
        #{messageId},
        #{messageType},
        #{procInstId},
        #{parentId},
        #{originalId},
        #{createdBy},
        #{createdName},
        #{createdDept},
        #{createdPosition},
        #{repliedBy},
        #{repliedName},
        #{repliedDept},
        #{repliedPosition},
        #{messageTitle},
        #{messageContent},
        #{messageDate},
        #{pushFlag},
        #{readFlag},
        #{bsUniRelated},
        #{viaUsers},
        #{messagePriority},
        #{messageFile},
        #{messageFileType},
        #{messageScreenType},
        #{attriText01},
        #{attriText02},
        #{attriText03},
        #{attriText04}
        )
    </insert>
    <!--更新-->
    <update id="updateMessage" parameterType="com.yk.message.entity.Message">
		update sys_message set
		message_type = #{message.messageType},
		proc_inst_id = #{message.procInstId},
		parent_id = #{message.parentId},
		original_id = #{message.originalId},
		created_by = #{message.createdBy},
		created_name = #{message.createdName},
		created_dept = #{message.createdDept},
		created_position = #{message.createdPosition},
		replied_by = #{message.repliedBy},
		replied_name = #{message.repliedName},
		replied_dept = #{message.repliedDept},
		replied_position = #{message.repliedPosition},
		message_title = #{message.messageTitle},
		message_content = #{message.messageContent},
		message_date = #{message.messageDate},
		push_flag = #{message.pushFlag},
		read_flag = #{message.readFlag},
		bs_uni_related = #{message.bsUniRelated},
		message_priority = #{message.messagePriority},
		message_file = #{message.messageFile},
		message_file_type = #{message.messageFileType},
		message_screen_type = #{message.messageScreenType},
		attri_text01 = #{message.attriText01},
		attri_text02 = #{message.attriText02},
		attri_text03 = #{message.attriText03},
		attri_text04 = #{message.attriText04},
		via_users = #{message.viaUsers}
		where message_id = #{message.messageId}
	</update>
    <!--根据删除-->
    <delete id="deleteMessage" parameterType="long">
		delete from sys_message m
		where m.message_id = #{messageId}
	</delete>
    <!--根据ID递归删除-->
    <delete id="deleteMessageRootAndChildren" parameterType="long">
        delete from sys_message m
        where m.message_id = #{messageId}
        or m.original_id = #{messageId}
    </delete>

    <select id="selectMessages" resultMap="messageMap">
        select
        <include refid="baseColumn"/>
        from sys_message
        where 1 = 1
        <if test="procInstId != null and procInstId != ''">
            and proc_inst_id = #{procInstId}
        </if>
        <if test="createdBy != null and createdBy != '' and notIncludeCreatedBy != null and 'false'.toString() == notIncludeCreatedBy.toString()">
            and created_by = #{createdBy}
        </if>
        <if test="createdBy != null and createdBy != '' and notIncludeCreatedBy != null and 'true'.toString() == notIncludeCreatedBy.toString()">
            and created_by <![CDATA[ <> ]]> #{createdBy}
        </if>
        order by message_priority desc, message_id, message_date asc
    </select>

    <select id="selectLeavesMessageList" resultMap="messageMap">
        select
        <include refid="baseColumn"/>
        from sys_message
        where 1 = 1
        <if test="procInstId != null and procInstId != ''">
            and proc_inst_id = #{procInstId}
        </if>
        <if test="messageId != null and messageId != ''">
            and original_id = #{messageId}
        </if>
        order by message_id, message_date asc
    </select>
    <select id="selectUserInfoByUuid" resultType="java.util.HashMap">
        select
        su.ACCOUNT as user_account,
        su.NAME as user_name,
        su.SEXCODE as sex,
        so.name as org_name,
        nvl(su.CONTACT1, su.CONTACT2) as contact,
        su.EMAIL as email
        from sys_user su
        left join sys_org so on su.ORGCODE = so.CODE
        where 1 = 1
        and su.UUID = #{uuid}
    </select>
    <select id="selectMessageListPage" resultMap="messageMap" parameterType="map">
        select
        <include refid="baseColumn"/>
        from sys_message
        where 1 = 1
        <if test="procInstId != null">
            and proc_inst_id = #{procInstId}
        </if>
        <if test="parentId != null">
            and parent_id = #{parentId}
        </if>
        <if test="messageScreenType != null">
            and message_screen_type = #{messageScreenType}
        </if>
        order by message_priority desc,message_id, message_date asc
    </select>
    <select id="selectMessageNotify" resultMap="messageMap" parameterType="string">
        select
        <include refid="baseColumn"/>
        from sys_message m
        where m.parent_id = 0
        and m.via_users is not null
        and instr(m.via_users, #{curUuid}) > 0
        union
        select
        <include refid="baseColumn"/>
        from sys_message m
        where m.parent_id <![CDATA[ <> ]]> 0
        and m.created_by = #{curUuid}
    </select>
    <select id="selectUserByCondition" parameterType="map" resultType="hashmap">
        select distinct tmp.* from
        (
        select
        distinct
        decode(u.orgcode, '000001', o2.name, o1.name) as orgname,
        u.ID,
        u.UUID,
        u.CODE,
        u.VERSION,
        nvl(tmp_d.item_name, u.NAME) AS NAME,
        u.SEXCODE,
        u.IDCARD,
        u.TYPECODE,
        u.ORGCODE,
        u.DEPTCODE,
        u.ACCOUNT,
        u.STATE,
        u.POSITIONCODE,
        u.POSITIONTYPECODE,
        u.WORKPLACE,
        u.CONTACT1,
        u.CONTACT2,
        u.EMAIL,
        u.WEIGHT,
        u.ORGPKVALUE,
        u.DEPTPKVALUE,
        u.POSTPKVALUE,
        u.PSNPKVALUE,
        u.POSITIONNAME,
        u.CREATE_TIME
        from sys_user u, sys_org o1, sys_org o2,
        (
        select
        st.item_name as item_name,
        st.item_code as item_code
        from sys_dictionary sd, sys_dictionary_item st
        where sd.dictionary_code in('REGIONAL_INFORMER', 'INSPECTION_TEAM')
        and sd.uuid = st.fk_dictionary_uuid
        and st.is_enabled = '1'
        ) tmp_d
        where 1 = 1
        and u.state = '2'
        and u.orgpkvalue = o1.orgpkvalue(+)
        and u.deptpkvalue = o2.orgpkvalue(+)
        and u.uuid = tmp_d.item_code(+)
        and exists
        (
        select 1 from sys_dictionary sd, sys_dictionary_item st
        where sd.dictionary_code in('REGIONAL_INFORMER', 'INSPECTION_TEAM')
        and sd.uuid = st.fk_dictionary_uuid
        and st.is_enabled = '1'
        and st.item_code = u.uuid
        <if test="messageType != null and messageType != '' and messageBusinessId != null and messageBusinessId != ''">
            /*正式评审*/
            <if test="messageType == 'formalReview'">
                union
                select 1 from rcm_formalassessment_info f
                where f.businessid = '${messageBusinessId}'
                and f.largeareapersonid = u.uuid
                union
                select 1 from rcm_formalassessment_info f
                where f.businessid = '${messageBusinessId}'
                and f.taskpersonid = u.uuid
                union
                select 1 from rcm_formalassessment_info f
                where f.businessid = '${messageBusinessId}'
                and f.legalreviewpersonid = u.uuid
                union
                select 1 from rcm_formalassessment_info f
                where f.businessid = '${messageBusinessId}'
                and f.reviewpersonid = u.uuid
                union
                select 1 from rcm_formalassessment_info f
                where f.businessid = '${messageBusinessId}'
                and f.grassrootslegalpersonid = u.uuid
                union
                select 1 from rcm_formalassessment_info f
                where f.businessid = '${messageBusinessId}'
                and f.firstlevellawyerpersonid = u.uuid
                union
                select 1 from rcm_formalassessment_log lg
                where lg.businessid = '${messageBusinessId}'
                and lg.audituserid = u.uuid
            </if>
            /*投标评审*/
            <if test="messageType == 'preReview'">
                union
                select 1 from rcm_pre_info p
                where p.businessid = '${messageBusinessId}'
                and p.largeareapersonid = u.uuid
                union
                select 1 from rcm_pre_info p
                where p.businessid = '${messageBusinessId}'
                and p.servicetypepersonid = u.uuid
                union
                select 1 from rcm_pre_info p
                where p.businessid = '${messageBusinessId}'
                and p.taskpersonid = u.uuid
                union
                select 1 from rcm_pre_info p
                where p.businessid = '${messageBusinessId}'
                and p.reviewpersonid = u.uuid
                union
                select 1 from rcm_pre_log lg
                where lg.businessid = '${messageBusinessId}'
                and lg.audituserid = u.uuid
            </if>
            /*其它评审*/
            <if test="messageType == 'bulletin'">
                union
                select 1 from rcm_bulletin_info b
                where b.businessid = '${messageBusinessId}'
                and b.legalleaderid = u.uuid
                union
                select 1 from rcm_bulletin_info b
                where b.businessid = '${messageBusinessId}'
                and b.reviewleaderid = u.uuid
                union
                select 1 from rcm_bulletin_log lg
                where lg.businessid = '${messageBusinessId}'
                and lg.audituserid = u.uuid
            </if>
        </if>
        )
        order by ${orderBy}
        ) tmp
        where 1 = 1
        <if test="username != null and username != ''">and tmp.name like '%${username}%'</if>
        <if test="username != null and username != ''">or tmp.account like '%${username}%'</if>
        <if test="username != null and username != ''">or tmp.orgname like '%${username}%'</if>
    </select>
    <select id="selectUserAbout" parameterType="java.lang.String" resultType="java.util.HashMap">
       select u.*,
       (select s.name from sys_org s where s.orgpkvalue = u.orgpkvalue) orgname,
       u.deptpkvalue,
       (select o.name from sys_org o where o.orgpkvalue = u.deptpkvalue) deptname,
       po.jobname,
       po.jobtype
       from sys_user u
       left join sys_user_position po on po.PSNPKVALUE = u.PSNPKVALUE
       where u.uuid = #{uuid}
    </select>
    <select id="selectProjectByTypeAndId" resultType="java.util.HashMap">
        /*正式评审审批*/
        <if test="type != null and type != '' and type == 'formalReview'">
            select
            lg.*,
            lg.projectname as "projectName",
            lg.createby as "sender",
            lg.projectname as "title"
            from rcm_formalassessment_info lg
            where lg.businessid = #{id}
        </if>
        /*投标评审审批*/
        <if test="type != null and type != '' and type == 'preReview'">
            select
            lg.*,
            lg.projectname as "projectName",
            lg.createby as "sender",
            lg.projectname as "title"
            from rcm_pre_info lg
            where lg.businessid = #{id}
        </if>
        /*其它评审审批*/
        <if test="type != null and type != '' and type == 'bulletin'">
            select
            lg.*,
            lg.bulletinname as "projectName",
            lg.createby as "sender",
            lg.bulletinname as "title"
            from rcm_bulletin_info lg
            where lg.businessid = #{id}
        </if>
    </select>
    <resultMap id="fileDtoMap" type="com.goukuai.dto.FileDto">
        <id column="fileid" property="fileid" javaType="java.lang.Long"/>
        <result column="hash" property="hash" javaType="java.lang.String"/>
        <result column="dir" property="dir" javaType="java.lang.Integer"/>
        <result column="fullpath" property="fullpath" javaType="java.lang.String"/>
        <result column="filename" property="filename" javaType="java.lang.String"/>
        <result column="filehash" property="filehash" javaType="java.lang.String"/>
        <result column="filesize" property="filesize" javaType="java.lang.Long"/>
        <result column="create_member_name" property="create_member_name" javaType="java.lang.String"/>
        <result column="create_dateline" property="create_dateline" javaType="java.lang.Long"/>
        <result column="last_member_name" property="last_member_name" javaType="java.lang.String"/>
        <result column="last_dateline" property="last_dateline" javaType="java.lang.Long"/>
        <result column="property" property="property" javaType="java.lang.String"/>
        <result column="uploadserver" property="uploadserver" javaType="java.lang.String"/>
        <result column="uri" property="uri" javaType="java.lang.String"/>
        <result column="preview" property="preview" javaType="java.lang.String"/>
        <result column="thumbnail" property="thumbnail" javaType="java.lang.String"/>
        <result column="tag" property="tag" javaType="java.lang.String"/>
        <result column="doctype" property="doctype" javaType="java.lang.String"/>
        <result column="doccode" property="doccode" javaType="java.lang.String"/>
        <result column="rcmfilename" property="rcmfilename" javaType="java.lang.String"/>
        <result column="preview3d" property="preview3d" javaType="java.lang.String"/>
        <result column="download3d" property="download3d" javaType="java.lang.String"/>
        <result column="previeqr3d" property="previeqr3d" javaType="java.lang.String"/>
        <result column="downloadqr3d" property="downloadqr3d" javaType="java.lang.String"/>
        <result column="pagelocation" property="pagelocation" javaType="java.lang.String"/>
        <result column="logicopt" property="logicopt" javaType="java.lang.String"/>
    </resultMap>
    <select id="selectPageLocationSequenceNumber" resultMap="fileDtoMap" parameterType="map">
        select
        f.*
        from file_dto f
        where
        1 = 1
        and f.doctype = #{docType}
        and f.doccode = #{docCode}
        and instr(f.pagelocation, #{tempUuid}) > 0
        order by
        f.fileid desc
    </select>
    <select id="selectViaUsers" resultType="com.alibaba.fastjson.JSONObject">
        select
        st.item_name as "NAME",
        st.item_code as "ID"
        from sys_dictionary sd, sys_dictionary_item st
        where sd.dictionary_code in('REGIONAL_INFORMER', 'INSPECTION_TEAM')
        and sd.uuid = st.fk_dictionary_uuid
        and st.is_enabled = '1'
    </select>
</mapper>