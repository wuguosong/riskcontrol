<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 模块名 -->
<mapper namespace="group">
	<select id="selectByDelete" resultType="String" useCache="false"> 
		select count(*) from sys_org u where u.parent_pk_value =#{org_pk_value}
	</select>
	<select id="selectCodeCount" resultType="String" useCache="false"> 
		select count(*) from sys_org u where 1=1 and u.code = #{code} 
	</select>
	<!-- 修改验证-->
	<select id="selectGroupCode" resultType="String" useCache="false"> 
		select count(*) from sys_org u where 1=1 and u.code = #{code} and u.uuid!=#{uuid}
	</select>
	<!-- 查询，resultType是结果类型，返回的list元素的转成该对象类型 -->
	<select id="selectOrg" resultType="map" useCache="false">
		select o.ORGPKVALUE as id, o.PARENTPKVALUE as pid, o.NAME, o.ISPARENT, o.CATEGORYCODE from sys_org_ext o where 1=1
		<choose>
			<when test="parentId!=null and parentId != ''">
				and o.PARENTPKVALUE = #{parentId} 
			</when>
			<otherwise>
				and o.PARENTPKVALUE is null
			</otherwise>
		</choose>
			order by o.CATEGORYCODE, o.CODE
	</select>
	<!-- 查询，resultType是结果类型，返回的list元素的转成该对象类型 -->
	<select id="selectGroup" resultType="map" useCache="false">
		select * from sys_org u where 1=1 
			<if test="ORGID!=null and ORGID!='' "> and u.PARENTPKVALUE = '${ORGID}' </if>
			<if test="CODE!=null and CODE!='' "> and u.code like '%${CODE}%' </if>
			<if test="LEGALPERSON!=null and LEGALPERSON!='' "> and u.legalperson like '%${LEGALPERSON}%' </if>
			<if test="NAME!=null and NAME!='' "> and u.name like '%${NAME}%' </if>
			 order by u.code
	</select>
		<!-- 查询，resultType是结果类型，返回的list元素的转成该对象类型 -->
	<select id="selectAllCount" resultType="String" useCache="false">
		 select count(*) from sys_org where 1=1 
		    <if test="code!=null and code!='' "> and code like '%${code}%' </if>
			<if test="address!=null and address!='' "> and address like '%${address}%' </if>
			<if test="name!=null and name='' "> and name like '%${name}%' </if>
			 order by code 
	</select>
	
	<select id="selectPkGroup" resultType="String" useCache="false">
		select MAX(org_pk_value) from sys_org
	</select>
	
	<!-- 查询，resultType是结果类型，返回的list元素的转成该对象类型 -->
	<select id="selectOneGroup" resultType="map" useCache="false">
		select * from sys_org where orgpkvalue='${org_pk_value}'
	</select>
	
	<select id="selectOneCode" resultType="String" useCache="false">
	    select count(*) from sys_org where code=#{code}
	</select>
	
	<select id="selectOrgALl" resultType="map" useCache="false">
		select org_pk_value,parent_pk_value,name from sys_org  order by to_number(code) asc
	</select>
	
	<!-- 新增，parameterType参数类型，可以是java基本对象，可以是对象，#{}表示取对应的参数 -->
	<insert id="insertGroup" parameterType="map">
		insert into sys_org
		(uuid,code, name, address,contacts,org_pk_value,parent_pk_value,org_short_name,state,telephone,post_code,area_code,
		character_code,normal_character,category_code,change_type_code,receive_org_code,merge_org_code,legal_person,market,entity,financial_org_code,fax) values
		(#{uuid,jdbcType=VARCHAR},#{code,jdbcType=VARCHAR},
		#{name,jdbcType=VARCHAR},#{address,jdbcType=VARCHAR},#{contacts,jdbcType=VARCHAR},#{org_pk_value,jdbcType=VARCHAR},
		#{parent_pk_value,jdbcType=VARCHAR},
		#{org_short_name,jdbcType=VARCHAR},#{state,jdbcType=VARCHAR},#{telephone,jdbcType=VARCHAR}
		,#{post_code,jdbcType=VARCHAR},#{area_code,jdbcType=VARCHAR},#{character_code,jdbcType=VARCHAR}
		,#{normal_character,jdbcType=VARCHAR},#{category_code,jdbcType=VARCHAR},#{change_type_code,jdbcType=VARCHAR}
		,#{receive_org_code,jdbcType=VARCHAR},#{merge_org_code,jdbcType=VARCHAR}
		,#{legal_person,jdbcType=VARCHAR},#{market,jdbcType=VARCHAR},#{entity,jdbcType=VARCHAR}
		,#{financial_org_code,jdbcType=VARCHAR},#{fax,jdbcType=VARCHAR}	)
	</insert>
	
 	<!-- 修改 -->
	 <update id="updateGroup" parameterType="map">
	 	update sys_org set code=#{code,jdbcType=VARCHAR},name=#{name,jdbcType=VARCHAR},
	 	address=#{address,jdbcType=VARCHAR},contacts=#{state,jdbcType=VARCHAR}, 
	 	org_short_name=#{org_short_name,jdbcType=VARCHAR} ,state=#{state,jdbcType=VARCHAR}
	 	,telephone=#{telephone,jdbcType=VARCHAR} ,post_code=#{post_code,jdbcType=VARCHAR},area_code=#{area_code,jdbcType=VARCHAR}
	 	,character_code=#{character_code,jdbcType=VARCHAR},normal_character=#{normal_character,jdbcType=VARCHAR}
	 	,category_code=#{category_code,jdbcType=VARCHAR}
	 	,change_type_code=#{change_type_code,jdbcType=VARCHAR},receive_org_code=#{receive_org_code,jdbcType=VARCHAR},
	 	merge_org_code=#{merge_org_code,jdbcType=VARCHAR}
	 	,legal_person=#{legal_person,jdbcType=VARCHAR},market=#{market,jdbcType=VARCHAR}
	 	,entity=#{entity,jdbcType=VARCHAR},financial_org_code=#{financial_org_code,jdbcType=VARCHAR},fax=#{fax,jdbcType=VARCHAR}
	 	where uuid = #{uuid}
	</update>  
	
	<!-- 删除 -->
	<delete id="deleteGroup" parameterType="String">
		delete from sys_org where uuid in(#{uuid})
	</delete>

	<update id="updateGroupState" parameterType="String">
		update sys_org set state=#{state} where uuid in(#{uuid})
	</update>
	
	<select id="selectGroupBypkValue" resultType="map" useCache="false">
	    select * from sys_org where org_pk_value=#{org_pk_value}
	</select>
	
	<select id="selectGroupAndUserAndReportingUnitIDparam" resultType="String" useCache="false">
		 select count(*) from SYS_GROUP_USER_REPORTINGUNIT where 1=1 
		    <if test="ID!=null and ID!='' "> and id!=#{ID} </if>
			<if test="REPORTINGUNIT_ID!=null and REPORTINGUNIT_ID!='' "> and reportingunit_id=#{REPORTINGUNIT_ID}</if>
	</select>
	<select id="selectGroupUserReportingUnit" resultType="map" useCache="false">
		 select ug.* from sys_group_user_reportingunit ug inner join sys_user u on u.orgpkvalue=ug.reportingunit_id
          where 1=1 <if test="ACCOUNT!=null and ACCOUNT!='' "> and u.ACCOUNT='${ACCOUNT}' </if>
	</select>
	<select id="queryPertainAreaByPkvalue" parameterType="map" resultType="hashmap">
		select o.* from sys_org o where code in
		<foreach collection="areaCodes" item="code" open="(" close=")" separator=",">
			#{code}
		</foreach>
 		start with orgpkvalue = #{reportUnitId}
		connect by o.orgpkvalue = prior o.PARENTPKVALUE
	</select>
	
	
	<select id="selectGroupUserReportingUnitByDeptpkvalue" resultType="map" useCache="false">
		select ug.* from sys_group_user_reportingunit ug where ug.reportingunit_id=(select u.DEPTPKVALUE from sys_user u where u.ACCOUNT='${ACCOUNT}')
	</select>
	<select id="selectGroupUserReportingUnitByAccount" resultType="map" useCache="false">
		select ug.* from sys_group_user_reportingunit ug 
          where 1=1 and ug.reportingunit_id=(select org.PARENTPKVALUE from sys_user u inner join sys_org org on u.ORGPKVALUE=org.ORGPKVALUE
          where u.ACCOUNT='${ACCOUNT}')
	</select>
	<select id="selectOrgNameByAccount" resultType="String" useCache="false">
		select org.name from sys_user u inner join sys_org org on u.ORGPKVALUE=org.ORGPKVALUE
         where 1=1 and u.ACCOUNT='${ACCOUNT}'
	</select>
	
	<!-- 区域、直接负责人 -->
	<select id="selectDirectUserReportingUnitList" resultType="map" useCache="false">
		select o.* from SYS_Direct_USER_REPORTINGUNIT o where 1=1
		    <if test="REPORTINGUNIT_NAME!=null and REPORTINGUNIT_NAME!='' "> and REPORTINGUNIT_NAME like '%${REPORTINGUNIT_NAME}%' </if>
			<if test="INVESTMENTPERSON_NAME!=null and INVESTMENTPERSON_NAME!='' "> and INVESTMENTPERSON_NAME like '%${INVESTMENTPERSON_NAME}%'</if>
			<if test="DIRECTPERSON_NAME!=null and DIRECTPERSON_NAME!='' "> and DIRECTPERSON_NAME like '%${DIRECTPERSON_NAME}%'</if>
			<if test="TYPE!=null and TYPE!='' "> and TYPE='${TYPE}'</if>
	</select>
	<select id="selectDirectUserReportingUnitID" resultType="map" useCache="false">
		 select * from SYS_Direct_USER_REPORTINGUNIT where id=#{id}
	</select>
	<select id="selectDirectUserReportingUnitParam" resultType="String" useCache="false">
		 select count(*) from SYS_Direct_USER_REPORTINGUNIT where 1=1 
		    <if test="ID!=null and ID!='' "> and id!=#{ID} </if>
		    <if test="REPORTINGUNIT_ID!=null and REPORTINGUNIT_ID!='' "> and REPORTINGUNIT_ID='${REPORTINGUNIT_ID}' </if>
			<!-- <if test="REPORTINGUNIT_NAME!=null and REPORTINGUNIT_NAME!='' "> and REPORTINGUNIT_NAME='${REPORTINGUNIT_NAME}' </if>
			<if test="INVESTMENTPERSON_NAME!=null and INVESTMENTPERSON_NAME!='' "> and INVESTMENTPERSON_NAME='${INVESTMENTPERSON_NAME}'</if>
			<if test="DIRECTPERSON_NAME!=null and DIRECTPERSON_NAME!='' "> and DIRECTPERSON_NAME='${DIRECTPERSON_NAME}'</if>-->
			<if test="TYPE!=null and TYPE!='' "> and TYPE='${TYPE}'</if> 
	</select>
	<insert id="insertDirectUserReportingUnit" parameterType="map">
		insert into SYS_Direct_USER_REPORTINGUNIT
		(id,REPORTINGUNIT_NAME, REPORTINGUNIT_ID,INVESTMENTPERSON_NAME,INVESTMENTPERSON_ID,DIRECTPERSON_NAME,DIRECTPERSON_ID,TYPE) values
		(#{ID,jdbcType=VARCHAR},#{REPORTINGUNIT_NAME,jdbcType=VARCHAR},#{REPORTINGUNIT_ID,jdbcType=VARCHAR},
		#{INVESTMENTPERSON_NAME,jdbcType=VARCHAR},#{INVESTMENTPERSON_ID,jdbcType=VARCHAR},
		#{DIRECTPERSON_NAME,jdbcType=VARCHAR},#{DIRECTPERSON_ID,jdbcType=VARCHAR},#{TYPE,jdbcType=VARCHAR})
	</insert>
	<update id="updateDirectUserReportingUnit" parameterType="map">
	 	update SYS_Direct_USER_REPORTINGUNIT set REPORTINGUNIT_NAME=#{REPORTINGUNIT_NAME,jdbcType=VARCHAR},REPORTINGUNIT_ID=#{REPORTINGUNIT_ID,jdbcType=VARCHAR},
	 	INVESTMENTPERSON_NAME=#{INVESTMENTPERSON_NAME,jdbcType=VARCHAR} ,INVESTMENTPERSON_ID=#{INVESTMENTPERSON_ID,jdbcType=VARCHAR}
	 	,DIRECTPERSON_NAME=#{DIRECTPERSON_NAME,jdbcType=VARCHAR} ,DIRECTPERSON_ID=#{DIRECTPERSON_ID,jdbcType=VARCHAR} ,TYPE=#{TYPE,jdbcType=VARCHAR}
	 	where id = #{ID}
	</update>  
	<!-- 删除 -->
	<delete id="deleteDirectUserReportingUnit" parameterType="String">
		delete from SYS_Direct_USER_REPORTINGUNIT where id in(#{ID})
	</delete>
	<select id="findDirectUserReportingUnitList" resultType="map" useCache="false">
		 select * from SYS_Direct_USER_REPORTINGUNIT where 1=1 
		    <if test="REPORTINGUNIT_ID!=null and REPORTINGUNIT_ID!='' "> and REPORTINGUNIT_ID='${REPORTINGUNIT_ID}' </if>
			<if test="TYPE!=null and TYPE!='' "> and TYPE in(${TYPE})</if> 
	</select>
</mapper>
