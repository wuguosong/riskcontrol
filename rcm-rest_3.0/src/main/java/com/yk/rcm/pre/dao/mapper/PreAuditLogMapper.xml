<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yk.rcm.pre.dao.IPreAuditLogMapper">

	<update id="updateOptionById" parameterType="map">
		update rcm_pre_log  l set l.opinion = #{option} 
		where  1= 1 and l.id = #{id} 
	</update>
	<update id="updateWaitingPerson" parameterType="map">
		update rcm_pre_log  l set l.audituserid = #{newUserId} 
		where  1= 1 and l.id = #{id} 
	</update>
	
	<select id="queryAuditedLogsById" parameterType="string" resultType="map">
		select t.*,(select name from sys_user where uuid=t.audituserid) auditUserName 
		from rcm_pre_log t where t.businessid=#{businessId} order by iswaiting asc,orderby asc 		
	</select>
	<select id="queryMaxAuditLogById" parameterType="string" resultType="map">
		select * from rcm_pre_log ll where ll.orderby = (
		select max(l.orderby) from rcm_pre_log l where l.businessid = #{businessId} and l.iswaiting = 0)
		and ll.businessid = #{businessId} and ll.iswaiting = 0	
	</select>
	
	<insert id="save"  parameterType="map">
		insert into 
		rcm_pre_log (
			businessid,
			audituserid,
			audittime,
			opinion,
			auditstatus,
			orderby,
			iswaiting,
			taskdesc,
			taskid,
			executionid,
			lastUserId,
			stage
		)
		values(
			#{businessId},
			#{auditUserId,jdbcType=VARCHAR},
			#{auditTime},
			#{opinion,jdbcType=VARCHAR},
			#{auditStatus},
			#{orderBy},
			#{isWaiting},
			#{taskdesc,jdbcType=VARCHAR},
			#{taskId,jdbcType=VARCHAR},
			#{executionId,jdbcType=VARCHAR},
			#{lastUserId,jdbcType=VARCHAR},
			#{stage,jdbcType=VARCHAR}
		)
	</insert>
	
	<delete id="deleteWaitlogs" parameterType="map" >
		delete from rcm_pre_log l where l.businessid=#{businessId} 
		<if test="currentUserId != null and currentUserId != ''">
			and l.audituserid = #{currentUserId} 
		</if>
		<if test="isWaiting !=null and isWaiting !=''">
			and l.iswaiting = #{isWaiting}
		</if>
		<if test="executionId !=null and executionId !=''">
			and l.executionid = #{executionId}
		</if>
	</delete>
	
	<select id="queryMaxOrderNum" parameterType="string"  resultType="int">
		select nvl(max(orderby), 1) nextorder from rcm_pre_log
		where businessid=#{businessId} and auditstatus != '9'
	</select>
	
	<select id="queryUsersByRoleId" parameterType="string" resultType="hashmap">
		select * from sys_user u where u.state='2' and u.uuid in(
		select user_id from sys_user_role where role_id=#{roleId})
	</select>
	<select id="queryWaitingLogs" parameterType="map" resultType="hashmap">
		 select * from rcm_pre_log  l where l.iswaiting = 1 
		 <if test="auditUserId != null and auditUserId != ''"> and l.audituserid = #{auditUserId} </if>
	</select>
	<select id="queryWaitingLogsById" parameterType="map" resultType="hashmap">
		 select * from rcm_pre_log  l where l.iswaiting = 1 
		 <if test="businessId != null and businessId != ''"> and l.businessId = #{businessId} </if>
	</select>
	
	<delete id="deleteHuiQianTaskByExecutionId" parameterType="map" >
		delete from rcm_pre_log l where l.iswaiting = '1' and l.executionid in (
			select ee.id_ from act_ru_execution ee where ee.parent_id_ = (
				select e.parent_id_ from act_ru_execution e where e.id_ = #{executionId}
			)
		)
	</delete>
</mapper>