
package com.yk.rcm.ws.client.evaluation;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;

import util.PropertiesUtil;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "TaskMangerImplService", targetNamespace = "http://impl.service.ws.com/", wsdlLocation = "http://10.10.20.86:8898/HeTaskMangerWeb/services/TaskManger?wsdl")
public class TaskMangerImplService
    extends Service
{

    private final static URL TASKMANGERIMPLSERVICE_WSDL_LOCATION;
    private final static WebServiceException TASKMANGERIMPLSERVICE_EXCEPTION;
    private final static QName TASKMANGERIMPLSERVICE_QNAME = new QName("http://impl.service.ws.com/", "TaskMangerImplService");

    static {
        URL url = null;
        String clientUrl = PropertiesUtil.getProperty("ws_hpg_send_addr");
        WebServiceException e = null;
        try {
        	URL baseUrl;
            baseUrl = ws.client.evaluation.TaskManger.class.getResource(".");
            url = new URL(baseUrl, clientUrl);
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        TASKMANGERIMPLSERVICE_WSDL_LOCATION = url;
        TASKMANGERIMPLSERVICE_EXCEPTION = e;
    }

    public TaskMangerImplService() {
        super(__getWsdlLocation(), TASKMANGERIMPLSERVICE_QNAME);
    }

    public TaskMangerImplService(WebServiceFeature... features) {
        super(__getWsdlLocation(), TASKMANGERIMPLSERVICE_QNAME, features);
    }

    public TaskMangerImplService(URL wsdlLocation) {
        super(wsdlLocation, TASKMANGERIMPLSERVICE_QNAME);
    }

    public TaskMangerImplService(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, TASKMANGERIMPLSERVICE_QNAME, features);
    }

    public TaskMangerImplService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public TaskMangerImplService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns TaskManger
     */
    @WebEndpoint(name = "TaskMangerImplPort")
    public TaskManger getTaskMangerImplPort() {
        return super.getPort(new QName("http://impl.service.ws.com/", "TaskMangerImplPort"), TaskManger.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns TaskManger
     */
    @WebEndpoint(name = "TaskMangerImplPort")
    public TaskManger getTaskMangerImplPort(WebServiceFeature... features) {
        return super.getPort(new QName("http://impl.service.ws.com/", "TaskMangerImplPort"), TaskManger.class, features);
    }

    private static URL __getWsdlLocation() {
        if (TASKMANGERIMPLSERVICE_EXCEPTION!= null) {
            throw TASKMANGERIMPLSERVICE_EXCEPTION;
        }
        return TASKMANGERIMPLSERVICE_WSDL_LOCATION;
    }

}
