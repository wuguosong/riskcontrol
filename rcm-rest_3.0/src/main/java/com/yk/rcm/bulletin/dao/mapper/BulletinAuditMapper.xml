<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yk.rcm.bulletin.dao.IBulletinAuditMapper">
	<update id="updateOptionById" parameterType="map">
		update rcm_bulletin_log  l set l.opinion = #{option} 
		where  1 = 1 
		and  l.id = #{id}
	</update>
	<update id="updateWaitingPerson" parameterType="map">
		update rcm_bulletin_log  l set l.audituserid = #{newUserId} 
		where  1 = 1 
		and  l.id = #{id}
	</update>
	
	<update id="updateOldPerson" parameterType="map">
		update rcm_bulletin_log  l set l.oldUserId = #{newUserId} 
		where l.id = #{id} 
	</update>
	
	<delete id="deleteWaitlog" parameterType="map">
		delete from rcm_bulletin_log l where 
		l.businessid=#{businessId} 
		<if test="currentUserId != null and currentUserId != ''">
			and l.audituserid = #{currentUserId} 
		</if>
		<if test="isWaiting !=null and isWaiting !=''">
			and l.iswaiting = #{isWaiting}
		</if>
		<if test="executionId !=null and executionId !=''">
			and l.executionid = #{executionId} 
		</if>
		<if test="taskId !=null and taskId !=''">
			and l.taskId = #{taskId}
		</if>
	</delete>

	<insert id="save" parameterType="map">
		insert into rcm_bulletin_log(businessid,audituserid,audittime,
		opinion,auditstatus,orderby,iswaiting,taskdesc,taskid,executionid,oldUserId,
		changeType,
		lastUserId,
		notifUsers
		)
		values(#{businessId},#{auditUserId,jdbcType=VARCHAR},#{auditTime},#{opinion,jdbcType=VARCHAR},
		#{auditStatus},#{orderBy},#{isWaiting},#{taskdesc,jdbcType=VARCHAR},
		#{taskId,jdbcType=VARCHAR},#{executionId,jdbcType=VARCHAR},#{oldUserId,jdbcType=VARCHAR},
		#{changeType,jdbcType=VARCHAR},
		#{lastUserId,jdbcType=VARCHAR},
		#{notifUsers,jdbcType=VARCHAR2})
	</insert>

	<select id="queryAuditLogs" parameterType="string" resultType="hashmap">
		select t.*,
		 (select bulletinname from rcm_bulletin_info where businessid=t.businessid) bulletinName,
		 (select name from sys_user where uuid=t.audituserid) auditUserName 
		from rcm_bulletin_log t where businessid=#{businessId} order by iswaiting,orderby
	</select>
	
	<select id="queryNextOrderNum" parameterType="string" resultType="int">
		select nvl(max(orderby)+1, 2) nextorder from rcm_bulletin_log where businessid=#{businessId}
	</select>
	
	<select id="queryMaxOrderNum" parameterType="string" resultType="int">
		select nvl(max(orderby), 0) nextorder from rcm_bulletin_log where businessid=#{businessId}
	</select>
	
	<select id="queryBusinessRole" parameterType="string" resultType="string">
		select role_id from sys_role r where r.code=
		(select item_code from sys_dictionary_item i where i.uuid=
		(select bulletintypeid from rcm_bulletin_info where businessid=#{businessId}))
	</select>
	
	<update id="updateWaitLog" parameterType="map">
		update rcm_bulletin_log set taskdesc=#{taskdesc},
		 audituserid=#{nextUserId,jdbcType=VARCHAR},audittime=#{now},orderby=#{orderBy},
		 taskid=#{taskId,jdbcType=VARCHAR},executionid=#{executionId,jdbcType=VARCHAR}
		 where iswaiting='1' and businessid=#{businessId}
	</update>
	
	<select id="isExistWaitLog" parameterType="map" resultType="int">
		select count(1) from rcm_bulletin_log where iswaiting='1' and businessid=#{businessId}
	</select>
	
	<select id="queryUsersByRoleId" parameterType="string" resultType="hashmap">
		select * from sys_user u where u.state='2' and u.uuid in(
		select user_id from sys_user_role where role_id=#{roleId})
	</select>
	
	<select id="queryWaitList" parameterType="map" resultType="hashmap">
		select t.*,(select name from sys_org where orgpkvalue=t.applyunitid) applyUnitName,
		 (select name from sys_user where uuid=t.unitpersonid) unitPersonName,
		 (select name from sys_user where uuid=t.createby) applyUserName,
		 (select item_name from sys_dictionary_item where uuid=t.bulletintypeid) bulletinTypeName 
		from rcm_bulletin_info t where auditstatus='1'
		 and businessid in ( select p.businessid business_key_
        from act_ru_task task, rcm_bulletin_log p
        where p.taskid = task.id_ and p.auditstatus = '9'
        <if test="auditUserId !=null and auditUserId !=''"> and p.auditUserid = #{auditUserId} </if> )
		<if test="bulletinName!=null and bulletinName!=''"> and bulletinname like '%${bulletinName}%'</if> 
		<if test="tbsxType!=null and tbsxType!=''"> and bulletintypeid=#{tbsxType}</if> 
		<if test="orderBy!=null and orderBy!=''"> order by ${orderBy}</if> 
	</select>
	
	<select id="queryAuditedList" parameterType="map" resultType="hashmap">
		select t.*,(select name from sys_org where orgpkvalue=t.applyunitid) applyUnitName,
		 (select name from sys_user where uuid=t.unitpersonid) unitPersonName,
		 (select name from sys_user where uuid=t.createby) applyUserName,
		 (select item_name from sys_dictionary_item where uuid=t.bulletintypeid) bulletinTypeName 
		from rcm_bulletin_info t where auditstatus!='0' 
		<if test="assignUserId!=null and assignUserId!=''"> and businessid in(
		select businessid from rcm_bulletin_log where iswaiting='0' and audituserid=#{assignUserId}) </if> 
		<if test="bulletinName!=null and bulletinName!=''"> and bulletinname like '%${bulletinName}%'</if> 
		<if test="tbsxType!=null and tbsxType!=''"> and bulletintypeid=#{tbsxType}</if> 
		<if test="orderBy!=null and orderBy!=''"> order by ${orderBy}</if> 
	</select>
	<select id="queryWaitingLogs" parameterType="map" resultType="hashmap">
		select * from rcm_bulletin_log  l where l.iswaiting = 1 
		<if test="auditUserId != null and auditUserId!=''"> and l.audituserid = #{auditUserId}</if> 
	</select>
	<select id="queryWaitingLogsById" parameterType="map" resultType="hashmap">
		select * from rcm_bulletin_log  l where l.iswaiting = 1 
		<if test="businessId != null and businessId !=''"> and l.businessId = #{businessId}</if> 
	</select>
	<update id="updateAuditUserIdById" parameterType="map">
		update rcm_bulletin_log set audituserid = #{auditUserId} where id = #{id}
	</update>
	
	<select id="queryLastLogsByDaxt" parameterType="map" resultType="hashmap">
		select *
		from (
		    select d_.*,rownum rn from(
				select b.* from rcm_bulletin_log b 
				where b.businessid = #{businessId,jdbcType=VARCHAR} 
				order by b.AUDITTIME desc		    
			) d_
		) t_
		<![CDATA[
		where t_.rn <= 1
  		]]>
	</select>
</mapper>