<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yk.rcm.project.dao.IWsCallMapper">
	
	<delete id="deleteFormalAssessmentReportByBusinessId"  parameterType="map">
		delete from rcm_formalAssessment_report where businessid = #{businessId}
	</delete>
		
	<insert id="saveFormalAssessmentReport"  parameterType="map">
		insert into rcm_formalAssessment_report 
		(
			businessId,
			projectSize,
			investmentAmount,
			rateOfReturn,
			serviceType
		)
		values (
			#{businessId},
			#{projectSize,jdbcType=DECIMAL},
			#{investmentAmount,jdbcType=DECIMAL},
			#{rateOfReturn,jdbcType=DECIMAL},
			#{serviceType,jdbcType=VARCHAR}
		)
	
	</insert>

	<insert id="insert" parameterType="map">
		insert into rcm_ws_call(id, type, content, success, calledtimes, createtime, updatetime, state, receive)
		values(#{id},#{type},#{content},#{success},#{calledtimes},to_date('${createtime}', 'yyyy-mm-dd hh24:mi:ss'),
		to_date('${updatetime}', 'yyyy-mm-dd hh24:mi:ss'),#{state},#{receive})
	</insert>
    <select id="queryByPage" parameterType="map" resultType="hashmap">
    	select ID,TYPE,CONTENT,STATE,CALLEDTIMES,
    	TO_CHAR(CREATETIME,'YYYY-MM-DD HH24:MI:SS') AS CREATETIME,
    	 TO_CHAR(UPDATETIME,'YYYY-MM-DD HH24:MI:SS') AS UPDATETIME
    	 ,SUCCESS,receive  from rcm_ws_call where 1=1
    	<if test="type!=null and type!=''"> and type like upper('%${type}%')</if>
    	<if test="content !=null and content !=''"> and content like '%${content}%'</if>
    	<if test="success!=null and success!=''"> and success=#{success}</if>
    	<if test="updatetimeStart!=null and updatetimeStart!=''"> 
    		and UPDATETIME &gt;= to_date('${updatetimeStart}', 'yyyy-mm-dd hh24:mi:ss')
    	</if>
    	<if test="updatetimeEnd!=null and updatetimeEnd!=''"> 
    		and UPDATETIME &lt;= to_date('${updatetimeEnd}', 'yyyy-mm-dd hh24:mi:ss')
    	</if>
    	order by createtime desc
    </select>
    
    <select id="queryByIds" parameterType="map" resultType="hashmap">
    	select * from rcm_ws_call where id in
    	<foreach collection="ids" item="id" open="(" close=")" separator=",">
    		#{id}
    	</foreach>
    </select>
    
    <select id="queryById" parameterType="string" resultType="hashmap">
    	select * from rcm_ws_call where id=#{id}
    </select>
    
    <update id="updateById" parameterType="map">
    	update rcm_ws_call set updatetime=#{updatetime},success=#{success},
    		calledTimes=#{calledTimes} where id=#{id}
    </update>
    
    <select id="getUnitIdById" parameterType="string" resultType="string">
    	select b.reporting_unit_id
          from rcm_project_info b
         where b.business_id in (select a.projectformalid from
         rcm_noticeofdecision_info a
         where a.businessid = #{id})
    </select>
    <select id="getorgpkvalueIdById" parameterType="string" resultType="string">
    	select o.name from sys_org o where o.orgpkvalue=#{value}
    </select>
    
    <select id="queryNotice" parameterType="map" resultType="hashmap">
    	select rcm.*,
    	 to_char(rcm.APPLY_DATE,'yyyy-mm-dd hh24:mi:ss') as APPLY_DATES,
    	 to_char(rcm.CREATE_DATE,'yyyy-mm-dd hh24:mi:ss') as CREATE_DATES,
    	 to_char(rcm.LAST_UPDATE_DATE,'yyyy-mm-dd hh24:mi:ss') as LAST_UPDATE_DATES
    	 from rcm_noticeofdecision_info rcm 
    </select>
    <select id="queryOracleById" parameterType="map" resultType="hashmap">
    	select * from rcm_noticedecision_info where businessid =#{businessid}
    </select>
    <select id="getGreateBy" parameterType="string" resultType="string">
    	select  i.user_id
 	 		from rcm_project_relation i
 				where i.business_id =
       			(select info.projectformalid
         		 from rcm_noticeofdecision_info info
         		where info.businessid = #{businessid})
   				and i.relation_type = #{relationVal}
    </select>
    <insert id="saveWsServer"  parameterType="map">
		insert into RCM_WS_SERVER 
		(
			id,
			type,
			content,
			state,
			create_time,
			result,
			success
		)
		values (
			#{id,javaType=java.lang.String,jdbcType=VARCHAR},
			#{type,javaType=java.lang.String,jdbcType=VARCHAR},
			#{content,javaType=java.lang.String,jdbcType=CLOB},
			#{state,javaType=java.lang.String,jdbcType=VARCHAR},
			#{create_time,javaType=java.util.Date,jdbcType=TIMESTAMP},
			#{result,javaType=java.lang.String,jdbcType=VARCHAR},
			#{success,javaType=java.lang.String,jdbcType=VARCHAR}
		)
	
	</insert>
</mapper>
