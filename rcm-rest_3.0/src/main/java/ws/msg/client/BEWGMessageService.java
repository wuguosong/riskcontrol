package ws.msg.client;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 3.3.1
 * 2019-04-19T14:02:14.364+08:00
 * Generated source version: 3.3.1
 *
 */
@WebServiceClient(name = "BEWG_Message_Service",
                  wsdlLocation = "http://10.10.20.82:8080/message/service?wsdl",
                  targetNamespace = "http://tempuri.org/")
public class BEWGMessageService extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://tempuri.org/", "BEWG_Message_Service");
    public final static QName BEWGMessageServiceHttpPost = new QName("http://tempuri.org/", "BEWG_Message_ServiceHttpPost");
    public final static QName BEWGMessageServiceHttpGet = new QName("http://tempuri.org/", "BEWG_Message_ServiceHttpGet");
    public final static QName BEWGMessageServiceSoap = new QName("http://tempuri.org/", "BEWG_Message_ServiceSoap");
    public final static QName BEWGMessageServiceSoap12 = new QName("http://tempuri.org/", "BEWG_Message_ServiceSoap12");
    static {
        URL url = null;
        try {
            url = new URL("http://10.10.20.82:8080/message/service?wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(BEWGMessageService.class.getName())
                .log(java.util.logging.Level.INFO,
                     "Can not initialize the default wsdl from {0}", "http://10.10.20.82:8080/message/service?wsdl");
        }
        WSDL_LOCATION = url;
    }

    public BEWGMessageService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public BEWGMessageService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public BEWGMessageService() {
        super(WSDL_LOCATION, SERVICE);
    }

    public BEWGMessageService(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    public BEWGMessageService(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    public BEWGMessageService(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }




    /**
     *
     * @return
     *     returns BEWGMessageServiceHttpPost
     */
    @WebEndpoint(name = "BEWG_Message_ServiceHttpPost")
    public BEWGMessageServiceHttpPost getBEWGMessageServiceHttpPost() {
        return super.getPort(BEWGMessageServiceHttpPost, BEWGMessageServiceHttpPost.class);
    }

    /**
     *
     * @param features
     *     A list of {@link WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns BEWGMessageServiceHttpPost
     */
    @WebEndpoint(name = "BEWG_Message_ServiceHttpPost")
    public BEWGMessageServiceHttpPost getBEWGMessageServiceHttpPost(WebServiceFeature... features) {
        return super.getPort(BEWGMessageServiceHttpPost, BEWGMessageServiceHttpPost.class, features);
    }


    /**
     *
     * @return
     *     returns BEWGMessageServiceHttpGet
     */
    @WebEndpoint(name = "BEWG_Message_ServiceHttpGet")
    public BEWGMessageServiceHttpGet getBEWGMessageServiceHttpGet() {
        return super.getPort(BEWGMessageServiceHttpGet, BEWGMessageServiceHttpGet.class);
    }

    /**
     *
     * @param features
     *     A list of {@link WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns BEWGMessageServiceHttpGet
     */
    @WebEndpoint(name = "BEWG_Message_ServiceHttpGet")
    public BEWGMessageServiceHttpGet getBEWGMessageServiceHttpGet(WebServiceFeature... features) {
        return super.getPort(BEWGMessageServiceHttpGet, BEWGMessageServiceHttpGet.class, features);
    }


    /**
     *
     * @return
     *     returns BEWGMessageServiceSoap
     */
    @WebEndpoint(name = "BEWG_Message_ServiceSoap")
    public BEWGMessageServiceSoap getBEWGMessageServiceSoap() {
        return super.getPort(BEWGMessageServiceSoap, BEWGMessageServiceSoap.class);
    }

    /**
     *
     * @param features
     *     A list of {@link WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns BEWGMessageServiceSoap
     */
    @WebEndpoint(name = "BEWG_Message_ServiceSoap")
    public BEWGMessageServiceSoap getBEWGMessageServiceSoap(WebServiceFeature... features) {
        return super.getPort(BEWGMessageServiceSoap, BEWGMessageServiceSoap.class, features);
    }


    /**
     *
     * @return
     *     returns BEWGMessageServiceSoap
     */
    @WebEndpoint(name = "BEWG_Message_ServiceSoap12")
    public BEWGMessageServiceSoap getBEWGMessageServiceSoap12() {
        return super.getPort(BEWGMessageServiceSoap12, BEWGMessageServiceSoap.class);
    }

    /**
     *
     * @param features
     *     A list of {@link WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns BEWGMessageServiceSoap
     */
    @WebEndpoint(name = "BEWG_Message_ServiceSoap12")
    public BEWGMessageServiceSoap getBEWGMessageServiceSoap12(WebServiceFeature... features) {
        return super.getPort(BEWGMessageServiceSoap12, BEWGMessageServiceSoap.class, features);
    }

}
