<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 模块名 -->
<mapper namespace="team">
	<select id="selectTeam" resultType="map" parameterType="map"
		useCache="false">
		select t.* from team t where 1=1
		<if test="TEAM_NAME!=null and TEAM_NAME!='' ">and t.team_name like '%${TEAM_NAME}%'</if>
		<if test="TEAM_LEADER!=null and TEAM_LEADER!='' ">and t.team_leader like '%${TEAM_LEADER}%'</if>
		order by t.ordernum,t.uuid desc
	</select>
	<select id="selectViewAll" resultType="map" parameterType="map"
		useCache="false">
		select t.team_member_name from team_item t where 1=1 and t.team_id=#{uuid}
		order by t.uuid desc
	</select>
	<select id="selectCountName" resultType="String" useCache="false">
		select count(*) from team t where 1=1
		and t.team_name = #{team_name}
		<if test="uuid!=null and uuid!='' "> and t.uuid != #{uuid} </if>
	</select>
	<insert id="insertTeam" parameterType="map">
		insert into team
		(uuid,team_name,type, team_leader,team_leader_id,orderNum) values
		(#{uuid,jdbcType=VARCHAR},#{team_name,jdbcType=VARCHAR},
		#{type,jdbcType=VARCHAR},
		#{team_leader,jdbcType=VARCHAR},
		#{team_leaderID,jdbcType=VARCHAR},
		#{orderNum,jdbcType=DOUBLE})
	</insert>
	<update id="updateTeam" parameterType="map">
		update team set team_name=#{team_name,jdbcType=VARCHAR},
		type=#{type,jdbcType=VARCHAR},
		team_leader=#{team_leader,jdbcType=VARCHAR},
		orderNum=#{orderNum,jdbcType=DOUBLE},
		team_leader_id=#{team_leaderID,jdbcType=VARCHAR}
		where uuid = #{uuid}
	</update>
	<select id="selectOneTeam" resultType="map" useCache="false">
		select *
		from team where uuid=#{uuid}
	</select>
	<delete id="deleteTeam" parameterType="String">
		delete from team where
		uuid in(#{uuid})
	</delete>
	<delete id="deleteTeamItem" parameterType="map">
		delete from team_item
		i where team_id=#{uuid}
	</delete>
	<insert id="insertAll" parameterType="map">
		insert into
		team_item(uuid, team_name,
		team_id,team_member_name,team_member_id) values
		(#{UUID,jdbcType=VARCHAR}, #{TEAM_NAME,jdbcType=VARCHAR},
		#{TEAM_ID,jdbcType=VARCHAR}, #{TEAM_MEMBER_NAME,jdbcType=VARCHAR},
		#{TEAM_MEMBER_ID,jdbcType=VARCHAR})
	</insert>

	<select id="selectTeamItem" resultType="map" useCache="false">
		select * from team_item where team_id=#{uuid}
	</select>
	<select id="selectTeamId" resultType="String" useCache="false">
		select t.team_id from team t where t.team_name=#{team_name_i}
	</select>
	<select id="selectLeadId" resultType="String" useCache="false">
		select t.lead_id from team t where t.team_name=#{team_name_i}
	</select>
	<select id="commonTeamPS" resultType="map" useCache="false">
		select t.team_name,ti.team_member_name as name,ti.team_member_id as
		value,t.ordernum
		from team t,team_item ti where t.uuid=ti.team_id(+) and t.type='1'
		order by ordernum asc
	</select>
	<select id="commonTeamFLPS" resultType="map" useCache="false">
		select t.team_name,ti.team_member_name as name,ti.team_member_id as
		value,t.ordernum
		from team t,team_item ti where t.uuid=ti.team_id(+) and t.type='2'
		order by ordernum asc

	</select>
	<!-- 根据组员ID查询组长 -->
	<select id="selectTeamLeaderByMemberId" resultType="map">
		select
		t.team_leader, t.team_leader_id from team t, team_item ti
		where t.uuid = ti.team_id and t.type=#{type} and ti.team_member_id =
		#{teamMemberId}
	</select>
</mapper>