<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 模块名 -->
<mapper namespace="sysFun">
	<select id="getRowCount" parameterType="String" resultType="Integer" useCache="false" >  
	    ${sql}
	</select>   
<!-- 添加前验证func_name是否重复	-->	
	<select id="selectNameCount" resultType="String" useCache="false" >
	    select count(*) from sys_func u where 1=1 
	    and u.func_name = #{func_name} and u.func_pid=#{func_pid}
	</select>
    <select id="selectSysFunction" resultType="map" useCache="false" >
		select * from sys_func u where 1=1 
			<if test="ORGID!=null and ORGID!='' "> and u.func_pid = '${ORGID}' </if>
			<if test="FUNC_NAME!=null and FUNC_NAME!='' "> and u.func_name like '%${FUNC_NAME}%' </if>
			<if test="URL!=null and URL!='' "> and url like '%${URL}%' </if>
			 order by u.func_id
	</select>
<!-- 	<select id="selectAllCount" resultType="String">
		 select count(*) from sys_func where 1=1 
		    <if test="func_name!=null and func_name!='' "> and func_name like '%${func_name}%' </if>
			<if test="func_desc!=null and func_desc!='' "> and func_desc like '%${func_desc}%' </if>
			<if test="func_id!=null and func_id!='' "> and func_id like '%${func_id}%' </if>
			<if test="url!=null and url='' "> and url like '%${url}%' </if>
			<if test="create_by!=null and create_by!='' "> and create_by like '%${create_by}%' </if>
			<if test="create_date!=null and create_date!='' "> and create_date  like '%${create_date}%' </if>
			<if test="state!=null and state='' "> and state like '%${state}%' </if>
			 order by func_id 
	</select> -->
	<select id="selectOneFunc_id" resultType="String" useCache="false" >
	    select count(*) from sys_func where func_id=#{func_id}
	</select>
	<select id="selectAllCount" resultType="String" useCache="false">
		 select count(*) from sys_func where 1=1 
			<if test="func_name!=null and func_name!='' "> and func_name like '%${func_name}%' </if>
			<if test="url!=null and url='' "> and url like '%${url}%' </if>
			 order by func_id 
	</select>
<!-- 	删除前查询-->
	<select id="selectByDelete" resultType="String" useCache="false">
		select count(*) from sys_func u where 1=1 and u.func_pid in ( #{func_id} )
	</select>
	
	<select id="selectOneSysFunction" resultType="map" useCache="false">
		select * from sys_func where func_id=#{func_id}
	</select>
	<select id="selectPkSysFunction" resultType="String" useCache="false" >
		select max(to_number(func_id))from sys_func
where nvl2(translate(func_id,'\0123456789','\'),0,1)=1
	</select>
	<insert id="insertSysFunction" parameterType="map">
		insert into sys_func
		( func_id,func_name,func_pid, func_desc,url,create_by,state,sort) values(
		#{func_id,jdbcType=VARCHAR},
		#{func_name,jdbcType=VARCHAR},
		#{func_pid,jdbcType=VARCHAR},
		#{func_desc,jdbcType=VARCHAR},
		#{url,jdbcType=VARCHAR},#{create_by,jdbcType=VARCHAR}
		,#{state,jdbcType=VARCHAR},#{sort,jdbcType=VARCHAR}	)
	</insert>
	
	<update id="updateSysFunction" parameterType="map">
	 	update sys_func set func_name=#{func_name,jdbcType=VARCHAR},
	 	func_desc=#{func_desc,jdbcType=VARCHAR},
	 	url=#{url,jdbcType=VARCHAR},create_by=#{create_by,jdbcType=VARCHAR}, 
	 	state=#{state,jdbcType=VARCHAR},sort=#{sort,jdbcType=VARCHAR}
	 	where func_id = #{func_id}
	</update>
		<delete id="deleteSysFunction" parameterType="String">
		delete from sys_func where func_id in(#{func_id})
	</delete>  
	<!-- 查询，resultType是结果类型，返回的list元素的转成该对象类型 -->
	<select id="selectFuntion" resultType="map" parameterType="map" useCache="false">
		 select * from sys_func f where 1=1 
			 <if test="funcName!=null and funcName!='' ">and f.func_name like '%${funcName}%'</if>
			 <if test="url!=null and url!='' ">and f.url like '%${url}%'</if>
			 <if test="state!=null and state!='' ">and f.state=${state}</if>
			 order by func_id desc
	</select>
	<!-- 查询，resultType是结果类型，返回的list元素的转成该对象类型 -->
	<select id="selectOneSysFunc" resultType="map" useCache="false">
		select * from sys_func where func_id=#{funcId}
	</select>
	<select id="selectOrgALl" resultType="map" useCache="false">
		select func_id,func_name,func_pid from sys_func  order by to_number(func_id) asc
	</select>
	
	<!-- 新增，parameterType参数类型，可以是java基本对象，可以是对象，#{}表示取对应的参数 -->
	<insert id="insertSysFunc" parameterType="map">
		insert into sys_user(uuid,code, name, sex_code,type_code,dept_code,account,email) values(#{uuid,jdbcType=VARCHAR},#{code,jdbcType=VARCHAR},#{name,jdbcType=VARCHAR},#{sex_code,jdbcType=VARCHAR},#{type_code,jdbcType=VARCHAR},#{dept_code,jdbcType=VARCHAR},#{account,jdbcType=VARCHAR},#{email,jdbcType=VARCHAR})
	</insert>
	
	<!-- 修改 -->
	<update id="updateSysFunc" parameterType="map">
	 	update sys_user set code=#{code,jdbcType=VARCHAR},name=#{name,jdbcType=VARCHAR},sex_code=#{sex_code,jdbcType=VARCHAR},type_code=#{type_code,jdbcType=VARCHAR},dept_code=#{dept_code,jdbcType=VARCHAR},account=#{account,jdbcType=VARCHAR},email=#{email,jdbcType=VARCHAR} where uuid = #{uuid}
	</update>
	
	<!-- 删除 -->
	<delete id="deleteSysFunc" parameterType="String">
		delete from sys_user where uuid in(#{uuid})
	</delete>
	<!-- 删除 -->
	<delete id="updateSysFuncState" parameterType="String">
		update sys_user set state=#{state} where uuid in(#{uuid})
	</delete>
</mapper>
